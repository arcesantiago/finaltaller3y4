package src;

import java.awt.BorderLayout;
import java.awt.EventQueue;
import java.awt.Image;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.border.TitledBorder;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.BorderFactory;
import javax.swing.Box;
import javax.swing.JButton;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.awt.event.ActionEvent;
import javax.swing.JSplitPane;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.ImageIcon;
import javax.swing.BoxLayout;

public class Administrador extends JFrame implements ActionListener  {
	private JTable table;
	static JFrame frame;
	static JDialog d; 
	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					new Administrador();
					
	
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 * @throws IOException 
	 */
	public Administrador() throws IOException {

        frame = new JFrame();
        JPanel productosPanel = new JPanel();
        productosPanel.setBorder(BorderFactory.createTitledBorder(
        BorderFactory.createEtchedBorder(), "Productos", TitledBorder.LEFT,
        TitledBorder.TOP));
        
        Restoranes restoranes = new Restoranes();
        Productos productos = new Productos();
        
        String[][] rec = {
           { "001", "David", "AUS" },
           { "002", "Steve", "AUS" },
           { "003", "Yuvraj", "IND" },
           { "004", "Kane", "NZ" },
           { "005", "Ben", "ENG" },
           { "006", "Eion", "ENG" },
           { "007", "Miller", "SA" },
           { "008", "Rohit", "IND" },
           { "006", "Eion", "ENG" },
           { "007", "Miller", "SA" },
           { "008", "Rohit", "IND" },
           { "008", "Rohit", "IND" },
           { "008", "Rohit", "IND" },
           { "008", "Rohit", "IND" },
           { "008", "Rohit", "IND" },
           { "008", "Rohit", "IND" },
           { "008", "Rohit", "IND" },
           { "008", "Rohit", "IND" },
           { "008", "Rohit", "IND" },
           { "008", "Rohit", "IND" },
           { "008", "Rohit", "IND" },
           { "008", "Rohit", "IND" },
           { "008", "Rohit", "IND" },
           { "008", "Rohit", "IND" },
           { "008", "Rohit", "IND" },
           { "008", "Rohit", "IND" },
           { "008", "Rohit", "IND" },
           { "008", "Rohit", "IND" },
           { "008", "Rohit", "IND" },
           { "008", "Rohit", "IND" },
           { "008", "Rohit", "IND" },
           { "008", "Rohit", "IND" },
           { "008", "Rohit", "IND" },
           { "008", "Rohit", "IND" },
           { "008", "Rohit", "IND" },
           { "008", "Rohit", "IND" },
           { "008", "Rohit", "IND" },
           { "008", "Rohit", "IND" },
           { "008", "Rohit", "IND" },
           { "008", "Rohit", "IND" },
           { "008", "Rohit", "IND" },
           { "008", "Rohit", "IND" },
           { "008", "Rohit", "IND" }
           
        };
        String[] header = { "Codigo", "Nombre", "Precio" };
        
        JSplitPane splitPane = new JSplitPane();
        splitPane.setOrientation(JSplitPane.VERTICAL_SPLIT);
        productosPanel.add(splitPane);
        JTable table_1 = new JTable(rec, header);
        JScrollPane scrollPane = new JScrollPane(table_1);
        splitPane.setLeftComponent(scrollPane);
        
        JSplitPane splitPane_1 = new JSplitPane();
        splitPane_1.setResizeWeight(0.5);
        splitPane.setRightComponent(splitPane_1);
        
        JTextField nombreProducto = new JTextField(5);
        JTextField precioProducto = new JTextField(5);

        JPanel panelProductos = new JPanel();
        panelProductos.add(new JLabel("Nombre:"));
        panelProductos.add(nombreProducto);
        panelProductos.add(Box.createHorizontalStrut(15));
        panelProductos.add(new JLabel("Precio:"));
        panelProductos.add(precioProducto);
        
        JButton agregarProducto = new JButton("Agregar");
        splitPane_1.setLeftComponent(agregarProducto);
  
        
        agregarProducto.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				
				int result = JOptionPane.showConfirmDialog(null,panelProductos,"Ingrese los datos del producto:", JOptionPane.OK_CANCEL_OPTION);
				
				if(result == JOptionPane.OK_OPTION)
					JOptionPane.showMessageDialog(null, "No se pudo ingresar. El campo es obligatorio");
				else {
					
				}
				
			}
		}); 
        
        JButton eliminarProducto = new JButton("Eliminar");
        splitPane_1.setRightComponent(eliminarProducto);

        
        eliminarProducto.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				
				int result = JOptionPane.showConfirmDialog(null,null,"Ingrese los datos del producto:", JOptionPane.OK_CANCEL_OPTION);
				
				if(result == JOptionPane.OK_OPTION)
					JOptionPane.showMessageDialog(null, "No se pudo ingresar. El campo es obligatorio");
				else {
					
				}
				
			}
		}); 
        
        frame.getContentPane().add(productosPanel, BorderLayout.SOUTH);
        
        JPanel restoranPanel = new JPanel();
        frame.getContentPane().add(restoranPanel, BorderLayout.CENTER);

        restoranPanel.setBorder(BorderFactory.createTitledBorder(
                BorderFactory.createEtchedBorder(), "Restoranes", TitledBorder.LEFT,
                TitledBorder.TOP));
        restoranPanel.setLayout(new BoxLayout(restoranPanel, BoxLayout.X_AXIS));
        
        JSplitPane splitPane_2 = new JSplitPane();
        splitPane_2.setResizeWeight(1.0);
        restoranPanel.add(splitPane_2);
        
        JSplitPane splitPane_3 = new JSplitPane();
        splitPane_2.setRightComponent(splitPane_3);
        
        JButton agregarRestoran = new JButton("Agregar");
        splitPane_3.setLeftComponent(agregarRestoran);
        

        JPanel panelRestoranes = new JPanel();
        JTextField nombreRestoran = new JTextField(20);
        panelRestoranes.add(new JLabel("Nombre:"));
        panelRestoranes.add(nombreRestoran);
        
        JComboBox<Restoran> comboBox = new JComboBox<Restoran>();

        agregarRestoran.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				
				int result = JOptionPane.showConfirmDialog(null,panelRestoranes,"Ingrese los datos del producto:", JOptionPane.OK_CANCEL_OPTION);
				String nuevoRestoran = nombreRestoran.getText();
				
				if(result == JOptionPane.OK_OPTION)
					if(nuevoRestoran.length() > 0) {
						comboBox.removeAllItems();
						
						restoranes.add(new Restoran(nuevoRestoran));

						for (Restoran restoran : restoranes.getList()) {
				        	comboBox.addItem(restoran);
						}
					}
				
				else {
					JOptionPane.showMessageDialog(null, "No se pudo ingresar. El campo es obligatorio");
				}
				nombreRestoran.setText("");
			}
		}); 

        JButton eliminarRestoran = new JButton("Eliminar");
        splitPane_3.setRightComponent(eliminarRestoran);
        
        eliminarRestoran.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				
				JOptionPane.showMessageDialog(null, "Esta seguro que desea eliminar el restoran");
				
				Restoran selectedRestoran = (Restoran) comboBox.getSelectedItem();
				
				restoranes.delete(selectedRestoran.id);
				
				comboBox.removeAllItems();
				
				for (Restoran restoran : restoranes.getList()) {
		        	comboBox.addItem(restoran);
				}
			}
		}); 
        
      
        
        splitPane_2.setLeftComponent(comboBox);
        
        for (Restoran restoran : restoranes.getList()) {
        	comboBox.addItem(restoran);
		}
        
        comboBox.addActionListener (new ActionListener () {
            public void actionPerformed(ActionEvent e) {
            	productos.getList();
            }
        });

        
        JPanel panel = new JPanel();
        
        
        ImageIcon i = new ImageIcon(Administrador.class.getResource("/src/logo.png"));
        Image scaled = i.getImage().getScaledInstance(100, 100, i.getImage().SCALE_SMOOTH);
        JLabel jl=new JLabel(new ImageIcon(scaled));

        panel.add(jl);
    
 
        frame.getContentPane().add(panel, BorderLayout.NORTH);
        frame.setSize(600, 725);
        frame.setVisible(true);
    }

	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
	


	
}
		

	


